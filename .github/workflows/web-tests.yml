name: Web Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  CI: true
  # Performance thresholds in milliseconds
  PERF_LCP_THRESHOLD: 2500
  PERF_LOAD_THRESHOLD: 5000

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create empty .watchmanconfig
        run: echo "{}" > .watchmanconfig

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Generate PWA assets
        run: npm run generate-pwa-assets

      - name: Run Playwright tests
        run: npm run test
        env:
          CI: true
          UPDATE_SNAPSHOTS: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Check performance thresholds
        run: |
          LCP=$(jq '.suites[0].specs[0].tests[0].results[0].metrics.largestContentfulPaint' playwright-report/results.json)
          LOAD_TIME=$(jq '.suites[0].specs[0].tests[0].results[0].metrics.loadTime' playwright-report/results.json)
          
          if [ $LCP -gt $PERF_LCP_THRESHOLD ]; then
            echo "‚ùå LCP ($LCP ms) exceeds threshold ($PERF_LCP_THRESHOLD ms)"
            exit 1
          fi
          
          if [ $LOAD_TIME -gt $PERF_LOAD_THRESHOLD ]; then
            echo "‚ùå Load time ($LOAD_TIME ms) exceeds threshold ($PERF_LOAD_THRESHOLD ms)"
            exit 1
          fi
          
          echo "‚úÖ Performance metrics within thresholds"

      - name: Generate test summary
        if: always()
        run: npm run test:summary

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: |
            test-results/
            tests/web/__snapshots__/
          retention-days: 30

      - name: Report Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { sha } = context.payload;
            
            const summary = require('./playwright-report/results.json');
            const failed = summary.failed || 0;
            const passed = summary.passed || 0;
            const total = summary.total || 0;
            
            const body = `## Test Results
            
            - ‚úÖ Passed: ${passed}
            - ‚ùå Failed: ${failed}
            - üìä Total: ${total}
            
            [View detailed report](${process.env.GITHUB_SERVER_URL}/${owner}/${repo}/actions/runs/${context.runId})`;
            
            await github.rest.repos.createCommitComment({
              owner,
              repo,
              commit_sha: sha,
              body
            }); 